name: Deploy DRF

on:
    release:
        types: [created]

jobs:
    PushImage:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v2

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: ghcr.io/Yakser/procollab-backend
                  flavor: latest=true
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
            - name: Build and push container
              uses: docker/build-push-action@v3
              with:
                  context: .
                  file: Dockerfile
                  push: true
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

  RunContainer:
    runs-on: ubuntu-latest
    needs: [PushImage]
    steps:
      - name: run on server
        uses: garygrossgarten/github-action-ssh@release
        with:
            host: ${{ secrets.SERVER_HOST }}
            username: ${{ secrets.SERVER_USER }}
            password: ${{ secrets.SERVER_PASSWORD }}
            command: |
                docker pull ghcr.io/Yakser/procollab-backend:latest &&
                cd /home/app/back &&
                rm -f .env &&
                touch .env &&
                echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env &&
                echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env &&
                echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env &&
                echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env &&
                echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env &&
                echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env &&
                echo "JWT_ACCESS_EXPIRE=${{ secrets.JWT_ACCESS_EXPIRE }}" >> .env &&
                echo "JWT_REFRESH_EXPIRE=${{ secrets.JWT_REFRESH_EXPIRE }}" >> .env &&
                echo "YANDEX_CLIENT_ID=${{ secrets.YANDEX_CLIENT_ID }}" >> .env &&
                echo "YANDEX_CLIENT_SECRET=${{ secrets.YANDEX_CLIENT_SECRET }}" >> .env &&
                echo "SWIFT_USER=${{ secrets.SWIFT_USER }}" >> .env &&
                echo "SWIFT_PASSWORD=${{ secrets.SWIFT_PASSWORD }}" >> .env &&
                echo "FRONTEND_HOST=${{ secrets.FRONTEND_HOST }}" >> .env &&
                echo "BACKEND_HOST=${{ secrets.BACKEND_HOST }}" >> .env &&
                echo "BACKEND_PORT=${{ secrets.BACKEND_PORT }}" >> .env &&
                echo "MAIL_SERVER=${{ secrets.MAIL_SERVER }}" >> .env &&
                echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env &&
                echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env &&
                echo "MAIL_FROM=${{ secrets.MAIL_FROM }}" >> .env &&
                echo "MAIL_PORT=${{ secrets.MAIL_PORT }}"  >> .env &&
                docker rm --force $(docker ps -qa) &&
                docker run -d --env-file .env -p 8080:8080 ghcr.io/procollab-github/back:latest
