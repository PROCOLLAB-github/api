# Generated by Django 4.2.3 on 2023-09-29 14:27

from io import BytesIO
from django.db import migrations
import requests
import webp
from typing import Optional

from PIL import Image

from files.service import SelectelSwiftStorage


def convert_image_to_webp(pil_image: Image, quality: int) -> Optional[BytesIO]:
    """
    Convert a PIL Image to WebP format.

    Parameters:
    - pil_image (PIL.Image): A PIL Image object to be converted.
    - quality (int): The quality of the converted WebP image, 0 to 100.

    Returns:
    - bytes: The converted WebP image in bytes, or None if the conversion fails.
    """
    try:
        config = webp.WebPConfig.new(preset=webp.WebPPreset.PHOTO, quality=quality)
        webp_data = webp.WebPPicture.from_pil(pil_image).encode(config=config)
        return BytesIO(webp_data.buffer())
    except Exception as e:
        print(f"An error occurred: {e}")
        return None


def migration(apps, schema_editor):
    UserFile = apps.get_model("files", "UserFile")
    files = UserFile.objects.all()
    storage = SelectelSwiftStorage()
    for i in files:
        # get all files that end in a .png or .jpg
        if i.link.endswith(".png") or i.link.endswith(".jpg"):
            # convert .png/.jpg to .webp
            # download file and convert it to PIL image
            file = requests.get(i.link)
            pil_image = Image.open(BytesIO(file.content))
            # make image be 512 by 512. cut coreners if needed
            pil_image.thumbnail((512, 512), Image.ANTIALIAS)
            # convert image to webp
            webp_file = convert_image_to_webp(pil_image, quality=80)
            # delete old file
            storage.delete(i.link)

            new_url = str(i.link).rsplit(".", 1)[0] + ".webp"
            token = storage._get_auth_token()
            requests.put(
                new_url,
                headers={
                    "X-Auth-Token": token,
                    "Content-Type": "image/webp",
                },
                data=webp_file,
            )
            i.link = new_url
            i.extension = "webp"
            i.mime_type = "image/webp"
            i.save()


class Migration(migrations.Migration):
    dependencies = [
        ("files", "0005_alter_userfile_options"),
    ]

    operations = [
        migrations.RunPython(migration, migrations.RunPython.noop),
    ]
