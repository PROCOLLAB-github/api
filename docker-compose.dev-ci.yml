version: '3.9'

services:
  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: ghcr.io/procollab-github/api:latest
    restart: unless-stopped
    volumes:
      - ./log:/procollab/log
    env_file:
      - .env
    environment:
      HOST: 0.0.0.0
    expose:
      - 8000

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    expose:
      - 3000
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-configs:/etc/grafana
    environment:
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true

  prometheus:
    image: prom/prometheus:v2.36.0
    restart: unless-stopped
    expose:
      - 9090
    volumes:
      - prom-data:/prometheus
      - ./prometheus:/etc/prometheus

  nginx:
    restart: unless-stopped
    build: ./nginx
    depends_on:
      - web
    ports:
      - 8000:80

  loki:
    image: grafana/loki:2.9.0
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.9.0
    restart: unless-stopped
    volumes:
      - /var/log:/var/log
      - ./promtail:/etc/promtail
      - ./log:/procollab/log
    command: -config.file=/etc/promtail/config.yml

  redis:
    image: redis:latest
    restart: unless-stopped
    expose:
      - 6379
    volumes:
      - redis-data:/data


  celerys:
    container_name: api_celery
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - .env
    command: bash ./scripts/celery.sh
    depends_on:
      - redis
      #      - db
      - web
    volumes:
      - .:/procollab
      -

volumes:
  grafana-data:
  grafana-configs:
  prom-data:
  prom-configs:
  log:
  promtail:
  redis-data:
