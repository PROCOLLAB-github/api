name: 'Build and Deploy server'

on:
  release:
    types: [ published ]

jobs:
  build:
    name: 'Build & Publish'
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v2

      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v1

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Login to GitHub Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/procollab-github/api
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Build and push container
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: run on server
        uses: garygrossgarten/github-action-ssh@release
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          command: |
            cd /home/app/procollab-backend &&
            docker-compose -f docker-compose.prod-ci.yml -p prod pull

            rm -f .env &&
            touch .env &&

            echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env &&

            echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env &&
            echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env &&
            echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env &&
            echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env &&
            echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env &&

            echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env &&
            echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> .env &&
            echo "EMAIL_HOST=${{ secrets.EMAIL_HOST }}" >> .env &&
            echo "EMAIL_PORT=${{ secrets.EMAIL_PORT }}" >> .env &&

            echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env &&

            docker-compose -f docker-compose.prod-ci.yml -p prod up -d