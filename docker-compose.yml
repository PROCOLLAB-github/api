version: '3.9'

services:
  web:
    container_name: web
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: always
    command: bash ./scripts/startup.sh
    volumes:
      - ./log:/procollab/log
    env_file:
      - .env
    environment:
      HOST: 0.0.0.0
    expose:
      - 8000

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana


  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.36.0
    ports:
      - '9090:9090'
    volumes:
      - prom-data:/prometheus
      - ./prometheus:/etc/prometheus


  nginx:
    container_name: nginx
    build: ./nginx
    depends_on:
      - web
    ports:
      - "8000:80"
# todo: настроим позже
#  loki:
#    image: grafana/loki:2.9.0
#    ports:
#      - "3100:3100"
#    command: -config.file=/etc/loki/local-config.yaml
#
#  promtail:
#    image: grafana/promtail:2.9.0
#    volumes:
#      - /var/log:/var/log
#      - ./promtail:/etc/promtail
#      - ./log:/procollab/log
#    command: -config.file=/etc/promtail/config.yml

  redis:
    container_name: redis
    image: redis:latest
    expose:
      - 6379
    volumes:
      - redis-data:/data

  celerys:
    container_name: api_celery
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - .env
    command: bash ./scripts/celery.sh
    depends_on:
      - redis
      - web
    volumes:
      - .:/procollab

volumes:
  grafana-data:
  grafana-configs:
  prom-data:
  prom-configs:
  log:
  promtail:
  redis-data:
  grafana-storage: {}
